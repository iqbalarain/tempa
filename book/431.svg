<?xml version="1.0" encoding="utf-8"?><svg:svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" version="1.1" width="650.787px" height="829.37px" preserveAspectRatio="none" viewBox="0 0 650.787 829.37"><svg:defs><svg:style type="text/css">@font-face { font-family: "g_d0_f1a53d4225";; src: url(data:font/woff;base64,); }  @font-face { font-family: "g_d0_f2f5976c15";; src: url(data:font/woff;base64,); }  @font-face { font-family: "g_d0_f3e5572f45";; src: url(data:font/woff;base64,d09GRk9UVE8AAAP8AAoAAAAABhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAC3AAAAPEAAAD6S8caxkZGVE0AAAPQAAAAHAAAABxnNjyJT1MvMgAAAVQAAAA+AAAAYIW/R9ljbWFwAAACkAAAAD8AAAFSJdwIbmhlYWQAAAD0AAAANQAAADb4hC7FaGhlYQAAASwAAAAdAAAAJAyJBOlobXR4AAAD7AAAABAAAAAQEGMA8m1heHAAAAFMAAAABgAAAAYABFAAbmFtZQAAAZQAAAD6AAACEDvemn1wb3N0AAAC0AAAAAwAAAAgAAMAAHjaY2BkYGAAYodtr3ji+W2+MnBzMIDAeqv3DSD68cOvJxlc/t1mY2FdAuRyMDCBRAFN1QxVAAAAeNpjYGRgYGv+Nw1I+jEAARsLAyMDKmABAEi5AoIAAAAAAFAAAAQAAHjaY2BmM2ScwMDKgAmqmdJ4+FmZGJkY2VmY2DjRpd1d3BUYHFQXPGBkE2F8wziLrZlRFUWBAhAyAgArTAdgAAB42q3RT2rCUBDH8e+L2hgoLooUl+4tYo4glaJuXPiH4qoRVILwIkbwFr1Fac/RC5R6hC57gC666i91uuyi0PeY8Mm8ycyDAHU+cPyswOy4JDYHhNyaS8rfm8uKR3OFc57NZ4pXc6j9Zq7Kn+aI0F2omytHNvlkx5V0ckCNvrmk/J25mPtgrtDgyVzMfTGH+vZorsrv5oiaC4pxN2rdZcSQMS3mJGxZ0SPFs2ah9z05AyZcq7jfHQ3HrXmyXfVSv14k+3wwUX6q4o0i46AnU7/x2cH/U3OtGUt2qkw1wdOkQ1t/JdbBcpenmW922nH8XfnbTf6Y/wI9pEn1AAB42mNgYGBmgGAZBkYGEPAB8hjBfBYGAyDNAYRMDAyqC1SPPWD8/x/BupV4y0aBCaoLDBjZGJC5IxIAAOyWDHAAeNpjYGbACwAAfQAEeNpjZGBhYWAEAgZGJgZGBvcfcgw/5Bl/KDD9UGT+IcrSzcPczcMix8XA0qEh390NZ/Cwn/+9U4aNRYZ1CasMwxx+GQYGARmGxYIyDFwyDB+EGNhBhnExCDJIMMiAoVFaZk5OakpSfkVpXqaRqbMZkHI1MDA00DM0dPNw9PcK1o5KLEhzycxLT0osKfYMcWZgYGBsZ+xg7GRgYWSU1XVye/97p+jPMzJsJ/+eYfvOLvNzpagM65Mfz2V+ybDz7ZVhvSgmw9or86sYiNj5vgHd9jNS9G/hz8K/hWCyiJVP5pcs368pIjKsj0W7ebgAFNJIvwAAAAAAAAEAAAAA1BlXPwAAAACvOu+AAAAAAOPh9ckEAABkBhUARAZOAEoAAAAA); }  @font-face { font-family: "g_d0_f433ca96fd";; src: url(data:font/woff;base64,); }  @font-face { font-family: "g_d0_f54d49976e";; src: url(data:font/woff;base64,); }  @font-face { font-family: "g_d0_f6a3104eae";; src: url(data:font/woff;base64,); } </svg:style><svg:clipPath id="clippath2" transform=""><svg:path d="M 22.504 14.000 L 636.787 14.000 L 636.787 815.370 L 22.504 815.370 Z" stroke-miterlimit="0" stroke-linecap="" stroke-linejoin="" stroke-width="1px" stroke-dasharray="" stroke-dashoffset="0px" fill="none" clip-rule="nonzero"></svg:path></svg:clipPath></svg:defs><svg:g transform="matrix(1 0 0 -1 0 829.37)"><svg:text transform="matrix(10 0 0 10 71.6929 48.6434) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.543 1.086 1.376 1.932 2.21 2.646 3.197 3.751 4.303 4.799 5.636 6.134 6.678 7.02 7.516 7.732 8.121 8.399 8.947 9.28 9.558 10.289 11.021 11.521 11.799 12.117 12.674 13.007 13.285 14.112 14.662 14.882 15.213 15.43 15.986 16.21 16.71 16.988 17.427 17.642 18.14 18.537 18.932 19.435 19.824 20.102 20.372 21.052 21.503" font-family="g_d0_f1a53d4225" font-size="1px" fill="rgb(43,46,52)">B3.2 Fundamentals of OOP formultipleclasses (HL)</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 556.216 48.6433) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.551 1.101" font-family="g_d0_f2f5976c15" font-size="1px" fill="rgb(43,46,52)">423</svg:tspan></svg:text><svg:g clip-path="url(#clippath2)"><svg:text transform="matrix(8 0 0 8 199.252 740.979) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.143" x="0" font-family="g_d0_f3e5572f45" font-size="1px" fill="none" stroke-width="0.09375px" stroke="rgb(111,113,117)">■</svg:tspan></svg:text></svg:g><svg:text transform="matrix(10 0 0 10 213.422 739.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 5.9 6.49 7.08 7.67" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__hash__(self)</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 296.022 739.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.249 0.498 0.862 1.291 1.62 2.177 2.571 3.145 3.524 3.773 4.225 4.771 5.02 5.307 5.848 6.159 6.599 7.059 7.501 7.861 8.11 8.681 9.141 9.516 10.062 10.311 10.79 11.242 11.504 12.044 12.478 12.727 13 13.501 13.861 14.11 14.443 14.986 15.42 15.669 16.172 16.675 16.942 17.384 17.821 18.138 18.387 18.636 19.088 19.635 20.162 20.411 20.704 21.083 21.332 21.897 22.29 22.736 23.263 23.512 23.799 24.355" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">: returns an integer hash value for the object, and is used in </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 725.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.571 1.031 1.405 1.976 2.411 2.915 3.178 3.612 3.861 4.298 4.797 5.084 5.347 5.789 6.226 6.559 6.822 7.323 7.897 8.276 8.525 8.916 9.456 9.899 10.445 10.694 11.154 11.533 11.782 12.175 12.604 12.944 13.323 13.572 14.024 14.571 15.098 15.347 15.896 16.159 16.596 16.929 17.192 17.693 18.264 18.716 19.11 19.373 19.835 20.202 20.451 20.7 20.989 21.275 21.524 21.986 22.487 23.033 23.282 23.788 24.253 24.694 25.088 25.482 25.748 26.273 26.707 30.492 30.741 30.99 31.452 31.953 32.499 32.748 33.123 33.666 34.167 34.724 34.99 35.527" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">hashable collections such as sets and dictionaries; if you override , you should </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 482.943 725.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__eq__</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 711.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.452 0.745 1.137 1.646 1.895 2.401 2.866 3.308 3.702 4.096 4.362 4.887 5.321 10.289 10.538 10.787 11.229 11.803 12.194 12.751 13.145 13.432 13.983 14.454 14.703 15.036 15.607 16.034 16.339 16.588 17.091 17.594 17.861 18.303 18.74 19.08 19.459 19.708 20.041 20.612 21.039 21.344 21.593 22.045 22.409 22.843 23.092 23.529 24.03 24.604 24.992 25.258 25.783 26.225 26.589 27.035 27.562 27.811 28.257 28.774 29.337 29.789 30.057 30.306 30.877 31.314 31.779 32.213 32.462 32.795 33.338 33.772 34.021 34.42 34.872 35.675 36.119" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">also override , ensuring that objects that are considered equal have the same </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 269.113 711.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__hash__</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 697.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.571 1.031 1.406 1.952 2.201 2.68 3.132 3.394 3.934 4.368 4.617 5.107 5.356 5.749 6.192 6.626 6.875 7.36 7.802 8.239 8.572 8.835 9.336 9.882 10.131 10.697 11.175 11.384 11.863 12.102 12.611 12.86 13.133 13.634 13.994 14.243 14.695 15.241 15.49 15.942 16.478 17.001 17.291 17.743 18.314 18.741 19.074 19.337 19.838 20.384 20.633 21.136 21.422 21.671 22.382 22.953 23.38 23.685 23.934 24.267 24.834 25.127 25.506 25.755 26.558 27.017 27.469 28.043" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">hash value – see Section B4.1.6 for an explanation of what this means</svg:tspan></svg:text><svg:g clip-path="url(#clippath2)"><svg:text transform="matrix(8 0 0 8 199.252 684.979) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.143" x="0" font-family="g_d0_f3e5572f45" font-size="1px" fill="none" stroke-width="0.09375px" stroke="rgb(111,113,117)">■</svg:tspan></svg:text></svg:g><svg:text transform="matrix(10 0 0 10 213.422 683.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 5.9 6.49 7.08 7.67 8.26 8.85 9.44 10.03 10.62 11.708 12.298 12.888 13.478 14.068 14.658 15.248 15.838 16.428 17.018 17.608 18.198 18.788 19.378 19.968 20.558 21.148 21.738 22.328 23.416 24.006 24.596 25.186 25.776 26.366 26.956 27.546 28.136 28.726 29.316 29.906 30.496 31.086 31.676 32.266 32.856 33.446 34.036" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__lt__(self, other)__le__(self, other)__gt__(self, other)</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 325.522 683.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.249 11.708 11.957 23.416 23.675" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">, , , </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 669.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 5.9 6.49 7.08 7.67 8.26 8.85 9.44 10.03 10.62" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__ge__(self, other)</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 325.522 669.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.249 0.498 1.063 1.456 1.902 2.429 2.678 2.951 3.452 3.812 4.061 4.498 4.999 5.802 6.342 6.794 7.188 7.481 7.873 8.374 8.92 9.169 9.671 10.212 10.654 11.031 11.458 11.767 12.268 12.647 13.026 13.275 13.766 14.015 14.264 14.742 15.224 15.473 15.722 16.231 16.48 16.932 17.479 18.006 18.255 18.777 19.286 19.535 19.899 20.361 20.753 21.294 21.736 22.173 22.506 22.774 23.239 23.681 23.95 24.433 24.692" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">: used for comparison operators &lt;, &lt;=, &gt; and &gt;= respectively; </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 655.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.333 0.876 1.318 1.789 2.038 2.49 2.854 3.288 3.537 4.102 4.495 4.941 5.468 5.717 6.234 6.705 6.954 7.287 7.83 8.264 13.234 13.483 13.792 14.349 14.892 15.329 15.662 15.925 16.426 16.972 17.221 17.673 18.22 18.747 18.996 19.496 19.829 20.372 20.814 21.174 21.423 21.875 22.239 22.698 23.158 23.537 23.786 24.497 25.04 25.481 25.845 26.279 26.528 26.861 27.404 27.846 28.21 28.644 28.893 29.186 29.565 29.814 30.248 30.497 30.934 31.435 31.978 32.416 32.852 33.376 33.681 33.93 34.433 34.719 34.968 35.42 35.976" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">they are used by the  function and other areas where there is a concept of an </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 298.563 655.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">sorted()</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 641.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.501 0.866 1.391 1.833 2.227 2.514 3.065 3.536 3.785 4.288 4.574 4.823 5.326 5.829 6.096 6.538 6.975 7.315" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">ordering of objects</svg:tspan></svg:text><svg:g clip-path="url(#clippath2)"><svg:text transform="matrix(8 0 0 8 199.252 628.979) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.143" x="0" font-family="g_d0_f3e5572f45" font-size="1px" fill="none" stroke-width="0.09375px" stroke="rgb(111,113,117)">■</svg:tspan></svg:text></svg:g><svg:text transform="matrix(10 0 0 10 213.422 627.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 5.9 6.49 7.08 7.67 8.26 8.85 9.44 10.03 10.62 11.21 11.8 12.39 13.478 14.068 14.658 15.248 15.838 16.428 17.018 17.608 18.198 18.788 19.378 19.968 20.558 21.148 21.738 22.328 22.918 23.508 24.098 24.688 25.278 25.868 26.458 27.048 27.638 28.228 28.818 29.408 29.998 31.086 31.676" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__getitem__(self, key)__setitem__(self, key, value)__</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 343.222 627.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.249 17.608 17.857" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">, , </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.432004 613.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 5.9 6.49 7.08 7.67 8.26 8.85 9.44 10.03 10.62 11.21" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">delitem__(self, key)</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 331.432004 613.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.249 0.498 0.956 1.408 1.695 1.958 2.404 2.931 3.18 3.489 3.998 4.247 4.611 5.04 5.373 5.767 6.03 6.471 6.936 7.37 7.619 7.868 8.261 8.69 8.995 9.244 9.745 10.105 10.354 10.879 11.321 11.584 12.013 12.324 12.758 13.007 13.459 14.005 14.254 14.514 14.825 15.266 16.071 16.32 16.885 17.274 17.561 18.112 18.583 18.832 19.165 19.708 20.142 20.391 20.678 21.225 21.75 22.202 22.735 23.022 23.573 24.054" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">: called to retrieve, set or delete an item using the indexing </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.432004 599.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.398 0.907 1.448 1.785 2.247 2.756" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">syntax </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 243.482005 599.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">obj[key]</svg:tspan></svg:text><svg:g clip-path="url(#clippath2)"><svg:text transform="matrix(8 0 0 8 199.252 586.979) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.143" x="0" font-family="g_d0_f3e5572f45" font-size="1px" fill="none" stroke-width="0.09375px" stroke="rgb(111,113,117)">■</svg:tspan></svg:text></svg:g><svg:text transform="matrix(10 0 0 10 213.422 585.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 5.9 6.49 7.08 7.67 10.284 10.874 11.464 12.054 12.644 13.234 13.824 14.414 15.004 15.594 16.184 16.774 17.364 17.954" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__iter__(self)__next__(self)</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 296.022 585.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.249 0.701 1.248 1.775 10.284 10.533 10.782 11.347 11.74 12.186 12.713 12.962 13.271 13.78 14.029 14.86 15.312 15.839 16.273 16.522 16.974 17.52 17.769 18.272 18.775 19.042 19.484 19.921 20.226 20.475 20.735 21.046 21.488 21.865 22.3 22.804 23.067 23.501 23.75 24.063 24.628 25.027 25.462 25.966 26.229 26.663 26.912 27.199 27.755" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)"> and : used to make an object iterable (usable in </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 571.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.434 0.681 1.231 1.948 2.549 2.796 3.059 3.576 4.078 4.583 4.832 5.079 5.352 5.853 6.213 6.46 6.912 7.447 7.899 8.702 9.225 9.488 9.874 10.221 10.47 15.435 15.682 16.057 16.6 17.101 17.658 17.924 18.451 18.698 19.062 19.491 19.82 20.377 20.771 21.317 21.564 22.016 22.562 22.809 23.069 23.38 23.822 24.199 24.626 24.935 25.436 25.796 26.043 26.546 27.049 27.316 27.758 28.195 28.512 28.761 29.008 29.719 30.286 30.549 30.992 31.538 31.785 32.078 32.457 32.704 33.04 33.552 34.078 34.341 34.798 35.25 35.537 35.806 36.287" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">a FOR loop, for example);  should return an iterator object, which is typically </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 320.575 571.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__iter__</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 557.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.333 0.876 1.31 1.559 2.062 2.565 2.832 3.274 3.711 4.016 4.265 4.525 4.865 5.258 5.7 5.989 6.27 6.519 6.768 7.22 7.767 8.294 13.262 13.511 13.886 14.429 14.93 15.487 15.753 16.28 16.529 16.893 17.322 17.651 18.208 18.602 19.148 19.397 19.73 20.273 20.707 20.956 21.499 21.951 22.474 22.779 23.028 23.288 23.599 24.041 24.846 25.095 25.596 25.956 26.205 26.582 27.034 27.327 27.72 28.154 28.403 28.869 29.178 29.68 30.201 30.509 30.82 31.262 31.639 32.066 32.399 32.662 33.163 33.709 33.958 34.267 34.786" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">the object itself, and  should return the next item or raise StopIteration to </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 298.84 557.623) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">__next__</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 213.422 543.573) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.441 0.988 1.515 1.764 2.097 2.64 3.074 3.323 3.584 3.895 4.336 4.713 5.14 5.473 5.736 6.238 6.79" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">end the iteration.</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.071999 526.743) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.611 1.055 1.328 1.77 2.13 2.379 2.688 3.197 3.446 3.779 4.322 4.756 5.005 5.323 5.76 6.238 6.672 6.921 7.373 7.92 8.447 8.696 9.27 9.769 10.102 10.645 11.146 11.692 11.941 12.466 12.983 13.432 13.989 14.792 15.234 15.775 16.112 16.539 16.872 17.135 17.636 18.182 18.431 18.704 19.205 19.565 19.814 20.266 20.8 21.252 22.055 22.578 22.841 23.303 23.682 23.931 24.434 24.72 24.969 25.256 26.059 26.582 26.845 27.287 28.09 28.532 29.073 29.406 29.693 30.244 30.715 30.964 31.423 31.857 32.3 32.846 33.095 33.598 33.884 34.133 34.466 35.009 35.453" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">Refer to the Java and Python documentation for examples of implementing each of the </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.071999 512.743) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.803 1.232 1.565 2.108 2.628 3.184 3.563 3.812 4.247 4.77 5.276 5.741 6.175 6.424 6.673 7.133 7.512 7.761 8.125 8.567 8.83 9.272 9.75 10.202 10.743 11.061" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">methods above, as relevant.</svg:tspan></svg:text><svg:text transform="matrix(18 0 0 18 185.079 470.946) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.58 1.121 1.406 1.95 2.228 2.774 3.042 3.756 4.361 4.751 5.118 5.476 6.018 6.476 6.837 7.092 7.688 8.289 8.557 9.094 9.691 10.292 10.56 11.097 11.702 12.092 12.459 12.817 13.359 13.817 14.196 14.464 14.881 15.135 15.681 16.064 16.443 16.993" font-family="g_d0_f2f5976c15" font-size="1px" fill="rgb(16,52,106)">B3.2.3 Abstraction and abstract classes</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 453.227) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.747 1.29 1.724 1.973 2.41 2.911 3.738 4.541 5.042 5.588 5.837 6.558 6.996 7.467 7.716 8.219 8.505 8.754 9.585 10.037 10.59 10.877 11.428 11.899 12.148 12.713 13.106 13.54 13.789 14.292 14.578 14.827 15.114 15.681 16.224 16.666 17.06 17.32 17.657 18.109 18.652 19.09 19.524 19.773 20.225 20.772 21.299 21.548 22.087 22.586 22.855 23.364 24.167 24.668 25.065 25.588 26.155 26.448 26.837 27.642 27.891 28.184 28.563 28.812 29.145 29.712 30.073 30.574 31.116 31.595 32.141 32.39 32.723 33.266 33.7 33.949 34.514 34.907 35.341 35.59 36.093 36.389" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">One common way of making use of inheritance and polymorphism is through the use of </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 439.227) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.435 0.962 1.34 1.673 2.05 2.484 2.921 3.226 3.475 3.918 4.208 4.668 5.069 5.462 5.924 6.303 6.552 6.801 7.443 7.97 8.348 8.681 9.058 9.492 9.929 10.234 10.483 10.926 11.216 11.676 12.077 12.47 12.932 13.311 13.56 14.017 14.469 15.015 15.264 15.789 16.223 16.472 16.805 17.348 17.849 18.391 18.87 19.411 19.716 19.965 20.468 20.754 21.003 21.463 21.842 22.091 22.551 22.993 23.536 23.978 24.372 24.635 25.069 25.318 25.629 26.071 26.874 27.397 27.687 28.114 28.425 28.887 29.266 29.515 30.264 30.524 30.857 31.4 31.901 32.433 32.738 32.987 33.439 33.983 34.454 34.703 35.155 35.66 36.102 36.551 37.083 37.42 37.855 38.359 38.622 39.066" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">abstract classes. Abstract classes can be thought of as generic templates without any executable </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 425.227) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.437 0.957 1.482 1.916 2.165 2.668 2.954 3.203 3.536 4.079 4.521 4.808 5.168 5.417 5.923 6.672 7.224 7.473 7.722 8.311 8.854 9.296 9.767 10.016 10.468 10.832 11.266 11.515 11.958 12.248 12.708 13.109 13.502 13.964 14.343 14.592 14.925 15.496 15.923 16.228 16.477 16.935 17.387 17.954 18.497 18.997 19.302 19.551 20.076 20.51 20.759 21.046 21.62 21.998 22.335 22.787 23.328 23.661 23.951 24.378 24.689 25.135 25.669 25.918 26.167 26.756 27.299 27.741 28.212 28.461 28.913 29.277 29.711 29.96 30.485 30.947 31.336 31.607 32.104 32.647 33.093 33.62 33.869 34.178 34.687 34.936 35.461 35.905" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">code of their own. They are classes that cannot be instantiated. They are designed to be </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 411.227) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.452 0.975 1.286 1.728 2.275 2.8 3.246 3.773 4.022 4.539 5.01 5.259 5.759 6.092 6.635 7.077 7.437 7.686 8.129 8.419 8.879 9.28 9.673 10.135 10.514" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">extended by other classes.</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 394.397) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.508 1.009 1.555 1.804 2.369 2.762 3.196 3.445 3.88 4.407 4.785 5.118 5.495 5.929 6.366 6.671 6.92 7.363 7.653 8.113 8.514 8.907 9.369 9.748 9.997 10.708 11.251 11.693 12.239 12.488 12.95 13.451 13.997 14.246 14.799 15.342 15.848 16.56 16.809 17.142 17.713 18.14 18.445 18.694 19.146 19.433 19.701 19.95 20.412 20.913 21.47 21.83 22.079 22.47 23.01 23.533 23.976 24.266 24.726 25.127 25.52 25.982 26.361 26.61 26.985 27.528 28.029 28.586 28.852 29.379 29.628 30.199 30.636 31.101 31.535 31.784 32.222 32.664 33.048 33.385 33.837 34.124 34.67 34.919 35.722 36.151 36.484 37.027 37.547 38.103 38.492" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">You use abstract classes when you know that all your subclasses should have certain methods </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 380.397001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.501 0.861 1.11 1.417 1.68 2.122 2.388 2.944 3.322 3.571 3.82 4.33 4.862 5.167 5.416 5.749 6.292 6.726 6.975 7.262 8.065 8.588 8.851 9.293 10.096 10.538 11.079 11.416 11.843 12.176 12.439 12.94 13.486 13.735 14.238 14.524 14.773 15.106 15.649 16.111 16.504 16.938 17.187 17.99 18.419 18.752 19.295 19.815 20.371 20.75 20.999 21.292 21.671 21.92 22.207 22.774 23.317 23.759 24.123 24.565 25.106 25.439 25.708 26.179 26.428 26.82 27.361 27.803 28.25 28.539 28.846 29.109 29.543 29.792 30.101 30.61 30.859 31.318 31.752 32.195 32.741 32.99 33.381 33.921 34.444 34.887 35.177 35.637 36.038 36.416 36.665 36.914 37.305 37.845 38.288 38.844" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">or fields, but the implementation of these methods is inherently specific to each subclass, such </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 366.397001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.333 0.904 1.331 1.636 1.885 2.145 2.45 2.699 3.224 3.741 4.203 4.592 5.117 5.268 5.573 5.822 6.653 7.105 7.632 8.066 8.315 8.578 9.086 9.583 9.846 10.304 10.756 11.024 11.273 11.666 12.107 12.681 13.074 13.508 13.757 14.066 14.575 14.824 15.35 15.711 16.217 16.724 16.99 17.515 17.949 18.198 18.632 18.881 19.406 19.849 20.15 20.58 21.137 21.397 21.702 21.951 22.238 23.041 23.564 23.827 24.269 25.072 25.513 26.054 26.391 26.818 27.151 27.414 27.915 28.467" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">that it doesn’t make logical sense to provide a default implementation.</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 349.567001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.96 1.527 1.814 2.077 2.511 2.76 3.02 3.325 3.574 4.099 4.616 5.078 5.467 5.992 6.143 6.448 6.697 7.223 7.584 8.09 8.597 8.863 9.388 9.822 10.071 10.523 11.067 11.538 11.787 12.096 12.653 13.196 13.633 13.966 14.229 14.73 15.301 15.753 16.04 16.3 16.636 17.037 17.286 17.535 17.868 18.411 18.845 19.094 19.529 20.056 20.434 20.767 21.144 21.578 22.015 22.32 22.569 23.012 23.302 23.762 24.163 24.542 24.791 25.317 25.678 26.184 26.691 26.957 27.482 27.944 28.323 28.572 28.95 29.287 29.739 30.286 30.839 31.291 31.656 32.205 32.506 32.96 33.387 33.72 33.983 34.484 35.03 35.279 35.731 36.278 36.815" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">While it doesn’t provide any functionality, the abstract class provides standardization and </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 335.567001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.437 0.938 1.512 1.901 2.194 2.572 2.883 3.325 3.868 4.324 4.795 5.044 5.331 5.877 6.126 6.459 7.002 7.436 7.685 7.972 8.775 9.298 9.561 10.003 10.806 11.248 11.789 12.126 12.553 12.886 13.149 13.65 14.196 14.445 14.948 15.234 15.483 15.874 16.414 16.937 17.38 17.67 18.13 18.531 18.924 19.386 19.753 20.002 20.251 20.584 21.127 21.561 21.81 22.335 22.776 23.319 23.763 24.07 24.33 24.635 24.884 25.409 25.851 26.138 26.689 27.16 27.409 27.742 28.313 28.74 29.045 29.294 29.746 30.29 30.752 31.253 31.796 32.23 32.479 33.044 33.433 33.72 34.271 34.742 34.991 35.453 35.954 36.511 36.871 37.12 37.563 37.853 38.313 38.714 39.103" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">consistency in the implementation of subclasses; the benefit being that anyone using your class </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 321.567001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.567 0.83 1.272 1.649 2.101 2.462 2.905 3.449 3.92 4.169 4.918 5.205 5.492 5.76 6.009 6.562 7.105 7.611 8.323 8.572 8.905 9.476 9.903 10.208 10.457 10.895 11.337 11.721 12.058 12.51 12.797 13.343 13.592 14.395 14.824 15.157 15.7 16.22 16.776 17.155 17.404 17.856 18.22 18.654 18.903 19.355 19.624 20.345 20.783 21.269 21.648 21.897 22.334 22.813 23.265 23.552 23.842 24.277 24.781 25.044 25.478 25.727 25.976 26.428 26.975 27.502 27.751 28.203 28.747 29.218 29.467 30.01 30.452 31.164 31.413 31.938 32.379 32.773 33.041 33.506 33.952 34.479 34.728 35.171 35.461 35.921 36.322 36.715 37.177 37.566" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">hierarchy will know that certain methods are always available, and any new derived classes </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 307.567001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.543 0.986 1.432 1.959 2.208 2.517 3.026 3.275 3.712 4.261 4.804 5.246 5.61 6.044 6.293 6.602 7.111 7.36 7.693 8.236 8.67 8.919 9.444 9.888 10.195 10.482 11.025 11.471 11.998 12.247 12.684 13.185 13.726 14.059 14.436 14.87 15.307 15.625" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">need to adhere to the defined contract.</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 290.737001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.667 1.046 1.295 1.747 2.293 2.542 2.994 3.528 3.98 4.783 5.306 5.569 6.003 6.252 6.501 6.938 7.439 8.013 8.402 8.668 9.193 9.635 9.995 10.244 10.696 11.242 11.491 11.922 12.449 12.972 13.259 13.522 13.98 14.407 14.74 15.003 15.504 16.05 16.299 16.632 17.203 17.63 17.935 18.184 18.727 19.17 19.616 20.172 20.551 20.8 21.303 21.806 22.073 22.515 22.952 23.292 23.671 23.92 24.229 24.738 24.987 25.818 26.27 26.841 27.277 27.737 28.171 28.42 28.753 29.296 29.73 29.979 30.505 30.866 31.368 31.909 32.35 32.734 33.067 33.33 33.792 34.171 34.42 34.923 35.209 35.458 35.937 36.389 36.783 37.046 37.547 38.112 38.501" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">As an example, consider an application that needs objects to manage the properties of various </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 276.737002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.509 1.203 1.452 1.912 2.354 2.855 3.658 4.087 4.42 4.814 5.077 5.511 5.76 6.135 6.706 7.137 7.678 8.14 8.518 8.767 9.016 9.407 9.947 10.39 10.936 11.185 11.645 12.024 12.273 12.707 12.956 13.495 14.016 14.417 14.806 15.076 15.58 15.843 16.277 16.526 16.963 17.464 18.267 18.793 19.325 19.636 20.078 20.438 20.687 21.162 21.614 22.417 22.853 23.102 23.351 23.659 23.964 24.213 25.044 25.496 26.023 26.485 26.864 27.113 27.506 27.948 28.522 28.915 29.349 29.598 29.907 30.416 30.665 31.029 31.475 31.992 32.549 32.836 33.2 33.634 33.883 34.216 34.787 35.214 35.519 35.768 36.22 36.507 36.785" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">2D geometric shapes, such as a possible computer game. It makes sense to require that all </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 262.737002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.443 0.733 1.193 1.594 1.987 2.449 2.828 3.077 3.41 3.981 4.408 4.713 4.962 5.249 6.052 6.575 6.838 7.279 8.082 8.524 9.065 9.37 9.619 10.053 10.302 10.811 11.505 11.754 12.129 12.7 13.131 13.672 14.106 14.355 14.926 15.363 15.827 16.261 16.51 16.944 17.193 17.502 18.059 18.602 19.039 19.372 19.635 20.136 20.682 20.931 21.264 21.835 22.262 22.567 22.816 23.18 23.609 23.938 24.495 24.889 25.463 25.842 26.091 26.351 26.69 27.069 27.318 27.709 28.266 28.652 28.953 29.387 29.825 30.259 30.508 30.96 31.324 31.783 32.219 32.468 32.717 33.169 33.716 34.243 34.492 34.944 35.487 35.987 36.32 36.863 37.304 37.674" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">classes that implement a 2D shape have a function that returns its surface area, and another </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 248.737002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.333 0.904 1.331 1.636 1.885 2.249 2.678 3.007 3.564 3.958 4.532 4.911 5.16 5.42 5.76 6.139 6.388 6.929 7.371 7.765 8.052 8.855 9.284 9.595 10.037 10.356 10.605 10.854 11.513 12.059 12.308 12.743 13.27 13.648 13.981 14.358 14.792 15.229 15.534 15.783 16.226 16.516 16.976 17.377 17.756 18.005 18.508 18.794 19.043 19.507 20.078 20.509 21.05 21.484 21.733 22.19 22.642 23.188 23.437 23.962 24.396 24.645 25.17 25.614 25.921 26.208 26.751 27.197 27.724 27.973 28.306 28.877 29.304 29.609 29.858 30.236 30.569 30.832 31.358 31.915 32.205 32.632 32.943 33.405 33.784 34.033 34.366 34.909 35.371 35.764 36.208" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">that returns its perimeter. An abstract class of Shape can be defined that stipulates these </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 234.737002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.364 0.81 1.327 1.884 2.171 2.535 2.977 3.78 4.222 4.763 5.103 5.481 5.73 5.979 6.439 6.818 7.067 7.4 7.943 8.377 8.626 8.899 9.398 9.685 9.948 10.455 11.204 11.491 12.042 12.513 12.762 13.214 13.748 14.2 15.003 15.526 15.789 16.223 16.472 16.997 17.439 18.242 18.743 19.317 19.695 20.028 20.405 20.832 21.143 21.605 21.984" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">requirements, as the following example demonstrates.</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 217.907002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.722 1.222 1.555 1.818 2.256 2.69 2.939 3.272 3.843 4.27 4.587 4.836 5.085 5.61 6.052 6.51 6.94 7.505 7.898 8.332 8.581 9.155 9.654 9.987 10.53 11.031 11.577 11.826 12.278 12.825 13.352 13.601 13.919 14.356 14.835 15.269 15.518 15.975 16.427 16.973 17.222 17.586 18.027 18.296 18.767 19.016 19.556 20.095 20.596 21.142 21.391 21.724 22.267 22.701 22.95 23.387 23.888 24.429 24.762 25.139 25.573 26.01 26.315 26.564 27.024 27.425 27.817 28.334 28.781 29.071 29.498 29.809 30.255 30.782 31.031 31.78 32.04 32.373 32.919 33.168 33.632 34.203 34.634 35.175 35.609 35.858 36.107 36.44 36.983 37.424 37.788 38.232" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">Notice that, because Python and Java can rely upon the contract associated with Shape, there </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 203.907002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.293 0.672 0.921 1.464 1.973 2.222 2.748 3.109 3.612 4.116 4.379 4.821 5.626 5.875 6.322 6.686 7.145 7.572 7.905 8.192 8.743 9.214 9.463 9.9 10.42 10.945 11.379 11.628 11.961 12.532 12.959 13.264 13.513 13.965 14.47 14.912 15.361 15.893 16.204 16.666 17.045 26.144 26.393 26.845 27.392 27.919 33.478 33.727 34.228 34.774 35.023 35.475 36.021 36.27 36.722 37.116 37.493 37.931 38.412" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">is no problem creating code that executes  and  on an array </svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 358.023 203.957002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 5.9 6.49 7.08 7.67 8.26 10.874 11.464 12.054 12.644 13.234 13.824 14.414 15.004 15.594" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">getPerimenter()getArea()</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 185.079 189.907002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.255" x="0 0.437 0.938 1.479 1.816 2.268 2.555 3.122 3.409 3.96 4.431 4.68 5.114 5.363 6.19 6.487 6.996 7.245 7.748 8.034 14.182 14.634 15.181 15.708 20.087 20.59 21.093 21.36 21.802 22.239 22.579 22.958" font-family="g_d0_f433ca96fd" font-size="1px" fill="rgb(43,46,52)">containing a mix of and objects.</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 267.904 189.957002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.59 1.18 1.77 2.36 2.95 3.54 4.13 4.72 5.31 7.674 8.264 8.854 9.444 10.034 10.624 11.214" font-family="g_d0_f54d49976e" font-size="1px" fill="rgb(43,46,52)">Rectangle Circle </svg:tspan></svg:text><svg:text transform="matrix(6 0 0 6 33.5039 3.114) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.481" x="0 0.556 1.112 1.668 2.224 2.78 3.336 3.892 4.448 5.004 5.56 6.282 6.838 7.671 8.227 8.783 9.061 9.617 9.95 10.506 11.173 11.673 11.895 12.451 13.007 13.507 14.063 14.619 14.897 15.564 16.12 16.842 17.064 17.62 17.842 18.398 19.231 19.787 20.343 21.01 21.566 21.844 22.066 22.622 23.178 23.734 24.012 24.29 24.568 25.124 25.68 89.963 90.519 91.075 91.353 91.909 92.465 92.743 93.299 93.855 94.411 94.967 95.245 95.523 95.801 96.357 96.913 97.191 97.747" font-family="g_d0_f6a3104eae" font-size="1px" fill="none" stroke-width="0.06667px" stroke="rgb(255,255,255)">009007_07_Computer_Science_IB_Diploma_B3.indd   42306/02/2025   16:25</svg:tspan></svg:text><svg:text transform="matrix(6 0 0 6 33.5039 3.114) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.481" x="0 0.556 1.112 1.668 2.224 2.78 3.336 3.892 4.448 5.004 5.56 6.282 6.838 7.671 8.227 8.783 9.061 9.617 9.95 10.506 11.173 11.673 11.895 12.451 13.007 13.507 14.063 14.619 14.897 15.564 16.12 16.842 17.064 17.62 17.842 18.398 19.231 19.787 20.343 21.01 21.566 21.844 22.066 22.622 23.178 23.734 24.012 24.29 24.568 25.124 25.68 89.963 90.519 91.075 91.353 91.909 92.465 92.743 93.299 93.855 94.411 94.967 95.245 95.523 95.801 96.357 96.913 97.191 97.747" font-family="g_d0_f6a3104eae" font-size="1px" fill="rgb(0,0,0)">009007_07_Computer_Science_IB_Diploma_B3.indd   42306/02/2025   16:25</svg:tspan></svg:text></svg:g></svg:svg>