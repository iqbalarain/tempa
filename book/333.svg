<?xml version="1.0" encoding="utf-8"?><svg:svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" version="1.1" width="650.787px" height="829.37px" preserveAspectRatio="none" viewBox="0 0 650.787 829.37"><svg:defs><svg:style type="text/css">@font-face { font-family: "g_d0_f1b68dd023";; src: url(data:font/woff;base64,); }  @font-face { font-family: "g_d0_f2232db487";; src: url(data:font/woff;base64,); }  @font-face { font-family: "g_d0_f3e8dc8361";; src: url(data:font/woff;base64,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); }  @font-face { font-family: "g_d0_f4e28816c7";; src: url(data:font/woff;base64,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); }  @font-face { font-family: "g_d0_f5fab9e449";; src: url(data:font/woff;base64,); } </svg:style></svg:defs><svg:g transform="matrix(1 0 0 -1 0 829.37)"><svg:text transform="matrix(10 0 0 10 71.6929 48.6434) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.539 1.069 1.344 1.9 2.178 2.682 3.007 3.569 4.122 4.444 4.94 5.769 6.598 6.813 7.365 7.921 8.199 8.632 9.189 9.737 10.136 10.468 10.801 11.355 11.822 12.175" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">B2.3 Programming constructs</svg:tspan></svg:text><svg:text transform="matrix(10 0 0 10 556.329 48.6433) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.543 1.078" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">325</svg:tspan></svg:text><svg:text transform="matrix(13 0 0 13 192.748 728.504) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.599 1.154 1.818 2.089 2.644 3.634 3.902 4.669 5.381 5.913 6.457 7.01 7.284 8.054 8.766" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(43,46,52)">REVIEW QUESTIONS</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 706.165) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">1</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 706.165) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.677 1.179 1.515 1.734 2.296 2.796 3.074 3.41 3.97 4.47 4.748 5.077 5.58 5.919 6.752 7.03 7.547 7.775 8.343 8.908 9.43 9.883" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Define the term “loop”.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 691.333) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">2</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 691.333) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.524 0.98 1.54 1.76 2.261 2.48 3.036 3.314 4.102 4.648 5.092 5.37 5.594 5.927 6.205 6.426 6.815 7.093 7.648 8.047 8.549 8.879 9.434 9.656 9.934 10.259 10.815 11.093 11.648 12.047 12.547 12.825 13.053 13.621 14.186 14.745 15.134 15.412 15.631 16.187 16.465 16.902 17.468 18.025 18.244 18.8 19.353" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Explain why it is useful to use loops in coding.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 676.501) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">3</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 676.501) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.524 0.98 1.54 1.76 2.261 2.48 3.036 3.314 3.65 4.21 4.71 4.988 5.545 5.769 6.127 6.45 6.953 7.283 7.786 8.345 8.784 9.284 9.562 10.13 10.632 10.995 11.775 12.286 12.789 13.345 13.623 14.123 14.401 14.959 15.289 15.82 16.186 16.623 17.184 17.742 18.299 18.523 18.859 19.087 19.648 20.204 20.482 20.983 21.541 22.097 22.375 22.875 23.153 23.719 24.282 24.685 24.999 25.365 25.802 26.363 26.921 27.478 27.702 28.038 28.266 28.827 29.383 29.661 29.889 30.457 31.022 31.566" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Explain the difference between a pre-condition and a post-condition loop.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 661.669) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">4</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 661.669) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.238 0.804 1.307 1.856 2.192 2.416 2.779 3.223 3.501 4.001 4.279 4.668 4.892 5.221 5.775 6.274 6.61 6.838 7.399 7.955 8.233 9.021 9.581 10.084 10.64 10.918 11.36 11.919 12.475 12.753 13.533 14.092 14.647 14.872 15.428 15.706 16.261 16.66 17.16 17.438 17.938 18.216 18.653 19.212 19.767 20.316 20.63 20.996 21.433 21.994 22.543 22.879 23.209 23.772 23.991 24.219 24.727 25.283 25.561 25.789 26.357 26.922 27.466" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Identify a situation when you would use a count-controlled loop.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 646.837) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">5</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 646.837) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.677 1.186 1.741 2.303 2.803 3.081 3.417 3.977 4.477 4.755 5.084 5.587 5.926 6.759 7.037 7.577 7.906 8.409 8.748 9.582 9.801 10.353 10.852 11.188 11.416 11.977 12.533 12.811 13.248 13.809 14.367 14.924 15.148 15.484 15.712 16.273 16.787 17.24" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Dene the term “termination condition”.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 632.005) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">6</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 632.005) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.524 0.98 1.54 1.76 2.261 2.48 3.036 3.314 4.102 4.648 5.092 5.37 5.594 5.927 6.205 6.426 6.815 7.093 7.312 8.149 8.715 9.276 9.641 9.987 10.488 11.037 11.37 11.648 11.973 12.529 12.807 13.303 13.745 14.308 14.533 15.089 15.367 15.586 16.142 16.697 17.251 17.475 17.804 18.304 18.582 18.81 19.378 19.943 20.502 20.898" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Explain why it is important to avoid innite loops.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 617.173) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">7</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 617.173) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.238 0.804 1.307 1.856 2.192 2.416 2.779 3.223 3.501 4.001 4.279 4.668 4.892 5.221 5.775 6.274 6.61 6.838 7.399 7.955 8.233 9.021 9.581 10.084 10.414 10.914 11.192 11.693 12.249 12.527 12.746 13.302 13.857 14.411 14.635 14.964 15.464 15.742 15.97 16.538 17.103 17.659 17.937 18.374 18.933 19.488 19.713 20.269 20.547 21.115 21.549 21.992 22.547 22.82" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Identify a situation where an innite loop could occur.</svg:tspan></svg:text><svg:text transform="matrix(13 0 0 13 192.748 572.061) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.548 1.138 1.906 2.627 3.26 3.974 4.908 5.848 6.123 6.837 7.549 7.817 8.373 9.031 9.579 10.169 10.782 11.05 11.59 12.122" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(43,46,52)">PROGRAMMING EXERCISES</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 549.722) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">1</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 549.722) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.636 1.197 1.75 2.153 2.489 2.826 3.385 3.856 4.189 4.467 4.967 5.245 5.803 6.133 6.699 7.256 7.583 8.084 8.917 9.195 9.531 10.083 10.582 10.915 11.193 11.694 11.913 12.141 12.698 13.492 13.881 14.159 14.495 15.055 15.555 15.833 16.388 16.787 17.29 17.623 17.901 18.226 18.782 19.06 19.563 20.112 20.441 20.944 21.277 21.555 22.055 22.333 22.884 23.439 24.276 24.844 25.347 25.62 25.898 26.176 26.908 27.467 27.806 28.364 28.923 29.256 29.534 30.035 30.254 30.476 30.754 31.305 31.86 32.697 33.265 33.768 34.119 34.508 34.786 35.354 35.856 36.219 36.999 37.51 38.013 38.569 38.847 39.403" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Construct a program that allows the user to enter a number. Output all numbers between 1 </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 537.725) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.501 1.059 1.615 1.893 2.229 2.781 3.28 3.613 3.891 4.442 4.997 5.834 6.402 6.905 7.178" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">and that number.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 522.893) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">2</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 522.893) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.636 1.197 1.75 2.153 2.489 2.826 3.385 3.856 4.189 4.467 4.904 5.47 6.036 6.536 6.814 7.15 7.702 8.201 8.534 8.812 9.142 9.65 10.206 10.761 10.98 11.31 11.818 12.207 12.485 12.821 13.381 13.881 14.159 14.714 15.113 15.616 15.949 16.227 16.552 17.108 17.386 17.889 18.438 18.767 19.27 19.603 19.881 20.381 20.659 21.21 21.765 22.602 23.17 23.673 24.006 24.284 24.785 25.343 25.899 26.177 26.677 26.955 27.735 28.296 28.627 29.18 29.458 29.736 30.409 30.63 31.022 31.582 31.802 32.298 32.742 33.02 33.522 34.027 34.47 35.026 35.304 35.532 36.034 36.391 36.72 37.223 37.556 37.834 38.053 38.609" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Construct code that requires the user to enter a number and a word. Display each letter in </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 510.896) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.336 0.896 1.396 1.674 2.454 3.015 3.346 3.902 4.18 4.741 5.297 5.575 6.075 6.353 6.752 7.259 7.819 8.32 8.647 9.146 9.475 9.975 10.253 10.472 10.691 11.253 11.736 12.014 12.292 12.851 13.358 13.926 14.428 14.927 15.26 15.538 15.874 16.434 16.934 17.212 17.77 18.1 18.668 19.107 19.615 20.016 20.405 20.683 21.019 21.579 22.079 22.357 22.912 23.311 23.814 24.16 24.408 24.797 25.075 25.626 26.181 27.018 27.586 28.089 28.422 28.7 29.253 29.586 29.864 30.2 30.419 31.261 31.769 32.165" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">the word on a separate line. Repeat the process the user’s number of times.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 496.064) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">3</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 496.064) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.636 1.197 1.75 2.153 2.489 2.826 3.385 3.856 4.189 4.467 4.904 5.47 6.036 6.536 6.814 7.15 7.702 8.201 8.534 8.812 9.315 9.704 10.229 10.618 10.896 11.232 11.792 12.292 12.57 13.125 13.524 14.027 14.36 14.638 14.963 15.519 15.797 16.016 16.572 17.13 17.689 18.022 18.3 18.629 19.132 19.688 19.966 20.517 21.072 21.909 22.477 22.98 23.331 23.727 24.005 24.283 24.937 25.438 25.664 26.107 26.662 26.882 27.381 27.71 28.21 28.488 28.989 29.547 30.103 30.381 30.938 31.159 31.551 32.111 32.331 32.827 33.271 33.549 33.885 34.445 34.945 35.223 35.608 36.163 36.996 37.274 37.827 38.16 38.438 38.939 39.158 39.38" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Construct code that asks the user to input ten numbers. Calculate and display the sum of all </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 484.067) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.501 0.943 1.446 2.002 2.28 2.831 3.386 4.223 4.791 5.294 5.644 6.033 6.311 6.814 7.363 7.692 8.195 8.525 9.033 9.586" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">even numbers entered.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 469.235) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">4</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 469.235) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.636 1.197 1.75 2.153 2.489 2.826 3.385 3.856 4.189 4.467 4.967 5.245 5.803 6.133 6.699 7.256 7.583 8.084 8.917 9.195 9.531 10.083 10.582 10.915 11.193 11.638 11.968 12.47 12.969 13.298 13.806 14.195 14.473 14.973 15.251 15.693 16.194 16.531 16.751 17.255 17.815 18.043 18.543 18.821 19.322 19.88 20.436 20.714 20.933 21.487 21.711 22.047 22.267 22.768 22.987 23.205 23.641 24.149 24.538 24.816 25.04 25.373 25.651 25.976 26.532 26.81 27.146 27.706 28.206 28.484 28.926 29.427 29.645 30.207 30.707 30.985 31.447 31.725 32.003 32.705 33.094 33.594 33.872 34.208 34.768 35.268 35.546 36.101 36.5 37.003 37.336 37.614 37.939 38.495" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Construct a program that creates a variable and initializes it to the value 7. Ask the user to </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 457.238) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.556 1.118 1.626 2.027 2.416 2.694 3.194 3.472 4.023 4.578 5.415 5.983 6.486 6.819 7.097 7.665 8.167 8.53 9.31 9.821 10.324 10.88 11.158 11.714 11.992 12.493 13.051 13.607 13.885 14.426 14.979 15.257 15.535 15.767 16.1 16.378 16.714 17.274 17.774 18.052 18.607 19.006 19.509 19.842 20.12 20.676 21.238 21.746 22.147 22.546 23.054 23.443 23.721 24.057 24.617 25.117 25.395 25.837 26.338 26.556 27.118 27.618 27.896 28.356 28.634 28.912 29.471 30.03 30.369 30.927 31.486 31.819 32.097 32.433 32.993 33.493 33.771 34.322 34.877 35.714 36.282 36.785 37.118 37.396 37.949 38.282" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">guess a number between 1 and 20. If the user guesses the value 7, output the number of </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 445.241) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.499 0.856 1.185 1.688 2.525 3.079 3.436 3.832 4.11 4.388 5.063 5.619 5.897 6.458 7.01 7.343 7.621 8.122 8.341 8.569 9.126 9.904 10.182 10.518 11.078 11.578 11.856 12.411 12.81 13.313 13.646 13.924 14.249 14.805 15.083 15.419 15.789 16.233 16.511 16.836 17.392 17.67 18.226 18.788 19.296 19.697 20.086 20.364 20.7 21.26 21.76 22.038 22.589 23.144 23.981 24.549 25.052 25.385 25.663 26.504 27.065 27.395 27.895 28.173 28.509 29.061 29.562 30.118 30.396 30.732 31.284 31.614 32.125 32.625 32.903 33.239 33.458 34.3 34.808 35.204 35.482 35.76 35.992 36.325 36.603 36.939 37.499 37.999 38.277 38.832 39.231 39.734 40.067" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">attempts. Do not allow the user to try to guess the number more than three times. If the user </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 433.244) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.565 1.135 1.643 2.03 2.569 2.847 3.18 3.458 4.014 4.576 5.084 5.485 5.874 6.152 6.488 7.048 7.548 7.826 8.377 8.932 9.769 10.337 10.84 11.173 11.451 11.951 12.309 12.638 13.141 13.474 13.752 14.088 14.64 14.97 15.481 15.981 16.259 16.758 17.115 17.444 17.947 18.784 19.338 19.695 20.086 20.364 20.642 21.201 21.76 22.099 22.657 23.216 23.549 23.827 24.163 24.723 25.223 25.501 26.343 26.851 27.252 27.656 28.159 28.725 29.203 29.481 29.759 30.314 30.829 31.389 31.889 32.167 32.724 33.225 34.067 34.567 34.845 35.066 35.455 35.733 35.961 36.529 36.972 37.45 37.958 38.511 38.789" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">doesn’t guess the number after three attempts, output the message: “The game is locked. </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 421.247) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.445 0.815 1.259 1.537 2.04 2.597 3.098 3.317 3.873 4.151 4.371 4.87 5.199 5.702 6.007 6.349" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Try again later!”</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 192.748 406.415) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">5</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 406.415) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.636 1.197 1.75 2.153 2.489 2.826 3.385 3.856 4.189 4.467 4.967 5.245 5.803 6.133 6.699 7.256 7.583 8.084 8.917 9.195 9.531 10.083 10.582 10.915 11.193 11.696 12.085 12.61 12.999 13.277 13.613 14.173 14.673 14.951 15.506 15.905 16.408 16.741 17.019 17.807 18.367 18.869 19.205 19.765 20.268 20.601 20.879 21.215 21.775 22.276 22.72 22.998 23.776 24.277 24.826 25.159 25.437 25.938 26.494 26.772 27.276 27.838 28.398 28.626 29.109 29.387 29.665 30.224 30.731 31.299 31.801 32.3 32.633 32.911 33.247 33.807 34.307 34.585 35.141 35.703 36.211 36.614 36.95 37.178 37.739 38.295" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Construct a program that asks the user whether they want an apple. Repeat the question </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 394.418) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.555 1.104 1.44 1.659 1.881 2.159 2.495 3.055 3.559 3.778 4.111 4.389 4.89 5.443 5.852 6.632 7.135 7.468 7.746 7.967 8.356 8.634 9.076 9.584 9.98 10.258 10.536 11.185 11.518 11.796 12.132 12.692 13.192 13.47 13.973 14.531 15.081 15.359 15.637 16.196 16.755 17.094 17.652 18.211 18.544 18.822 19.158 19.718 20.218 20.496 21.338 21.846 22.247 22.651 23.154 23.72 24.198 24.476 24.754 25.219 25.902 26.464 27.024 27.252 27.76 28.149 28.427 28.928 29.258 29.758 30.036 30.602 31.106 31.325 31.551 31.994 32.222 32.781 33.336 33.727 34.005 34.283 34.784 35.114 35.617 36.156 36.434 36.767 37.045 37.381 37.941 38.442 38.812 39.312" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">until their answer is yes. At the end, output the message: “Apples are delicious, aren’t they? </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 206.923 382.421) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.454 0.956 1.315 1.563 1.952 2.23 2.782 3.278 3.72 4.22 4.498 5.059 5.621 6.094 6.436" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Let’s have one!”</svg:tspan></svg:text><svg:text transform="matrix(12 0 0 12 190.808 340.311) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.234" x="0 0.631 1.264 1.837 2.157 2.754 3.061 3.674" font-family="g_d0_f4e28816c7" font-size="1px" fill="rgb(255,255,255)">ACTIVITY</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 190.748 323.2) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.723 1.116 1.662 1.93 2.416 3.024 3.633 4.012 4.28 4.832 5.447 5.848 6.676 7.234 7.638 8.017 8.285 8.662 9.263 9.531 9.914 10.525 11.071 11.339 11.953 12.332 12.948 13.557 13.931 14.484 15.372 16.253 16.522 17.133 17.734 18.002 18.558 19.047 19.605 19.988 20.421 20.699 21.092 21.656 22.035 22.303 22.855 23.471 24.071 24.563 25.109 25.377 25.754 26.355 26.623 27.175 27.79 28.191 29.019 29.577 29.956 30.224 30.607 31.218 31.764 32.032 32.413 33.02 33.283 33.555 34.158 34.989 35.258 35.869 36.47 36.738 37.345 37.959 38.523 38.927 39.304 39.575 40.186 40.801 41.202" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">Use your answers to the programming exercises above to answer the following questions.</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 190.748 311.203) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">1</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 311.203) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 1.022 1.638 2.201 2.59 2.868 3.15 3.774 4.395 5.006 5.284 5.897 6.181 6.792 7.07 7.566 8.184 8.795 9.073 9.703 10.106 10.662 10.94 11.327 11.938 12.216 12.619 13.236 13.52 14.022 14.578 14.856 15.473 16.097 16.671 17.085 17.472 17.753 18.374 18.985 19.263 19.758 20.258 20.536 21.154 21.772 22.385 22.67 23.281 23.559 24.055 24.673 25.284 25.562 25.954 26.522 27.142 27.421 27.988 28.434 28.99 29.268 29.661 30.277 30.84 31.229 31.507 31.789 32.413 33.034 33.645 33.923 34.764 35.05 35.443 36.054 36.332 36.894 37.513 38.133 38.526 39.147 39.715 40.104" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">What loop did you use to solve question 1? Could you replace that loop with another </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 299.206) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.621 1.242 1.748 2.248 2.526 3.26 3.873 4.706 4.984 5.819 6.437 7.05 7.335 7.946 8.224 8.72 9.338 9.949 10.227 10.85 11.461 11.739 12.132 12.748 13.311 13.677" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">one? How would you do that?</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 190.748 287.209) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">2</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 287.209) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.726 1.01 1.621 1.899 2.292 2.913 3.469 3.747 4.372 4.761 5.387 6.006 6.39 6.953 7.842 8.12 8.616 9.234 9.845 10.123 10.566 11.187 11.812 12.226 12.619 13.014 13.64 14.121 14.512 15.085 15.696 15.974 16.361 16.972 17.25 17.653 18.27 18.554 19.056 19.612 19.89 20.507 21.131 21.705 22.119 22.506 22.787 23.408 24.019 24.297 24.853 25.131 25.747 26.309 26.932 27.545 27.83 28.386 28.664 29.294 29.697 30.265 30.654 30.932 31.211 31.829 32.45 33.076 33.465 33.743 34.186 34.807 35.202 35.594 36.166 36.647 37.034 37.32 37.784 38.284 38.562 39.193 39.755 40.366" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">Did the program you constructed to solve question 2 handle user input correctly? Can </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 275.212) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.496 1.114 1.725 2.003 2.396 3.007 3.286 3.904 4.46 4.738 5.351 5.74 6.018 6.58 7.191 7.469 8.029 8.6 8.994 9.277 9.845 10.234 10.512 11.344 11.899 12.399 12.677 13.064 13.675 13.953 14.519 15.059 15.452 15.836 16.403 16.884 17.273 17.551 18.111 18.678 19.126 19.737 20.015 20.3 20.87 21.293 21.684 22.252 22.641 22.919 23.317 23.706 24.328 25.217 25.495 26.051 26.329 26.942 27.226 27.728 28.296 28.907 29.185 30.02 30.641 31.035 31.632" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">you think of an easier way to extract each letter from a given word?</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 190.748 263.215001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">3</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 263.215001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.726 1.01 1.621 1.899 2.395 3.013 3.632 4.021 4.299 4.923 5.312 5.938 6.557 6.941 7.504 8.393 8.671 9.062 9.683 10.072 10.35 10.967 11.591 12.165 12.579 12.966 13.247 13.868 14.479 14.757 15.313 15.591 16.157 16.697 17.09 17.474 18.041 18.522 18.911 19.189 19.582 20.203 20.759 21.037 21.595 22.097 22.665 23.276 23.554 24.168 24.787 25.685 26.313 26.881 27.295 27.684 27.962 28.405 29.026 29.421 29.813 30.385 30.866 31.253 31.539 32.003 32.503 32.781 33.803 34.419 34.982 35.371 35.649 36.097 36.713 37.275 37.896 38.52 39.076" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">Did your program for question 3 extract the even numbers correctly? What change </svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 251.218001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.835 1.453 2.066 2.351 2.962 3.24 3.7 4.257 4.543 4.989 5.602 5.881 6.444 6.835 7.391 7.669 8.062 8.683 9.239 9.517 9.912 10.531 11.42 11.698 12.311 12.7 12.978 13.535 13.808 14.086 14.364 14.757 15.378 15.934 16.212 16.838 17.462 18.073 18.351 18.965 19.584 20.482 21.11 21.678 22.092 22.481 22.759 23.038 23.663 24.077 24.468 25.028 25.595 26.192" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">would calculate the sum of all the odd numbers instead?</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 190.748 239.221001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">4</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 239.221001) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 1.022 1.63 2.13 2.408 3.031 3.642 3.92 4.416 5.034 5.645 5.923 6.316 6.927 7.206 7.824 8.38 8.658 9.214 9.492 10.002 10.797 11.408 11.686 11.968 12.592 13.213 13.824 14.102 14.39 14.779 15.057 15.676 16.296 16.685 16.963 17.525 18.15 18.775 19.164 19.785 20.409 20.799 21.076 21.639 22.03 22.586 22.864 23.255 23.876 24.265 24.543 24.946 25.563 25.847 26.354 26.633 27.254 27.865 28.143 28.76 29.384 29.958 30.372 30.759 31.04 31.661 32.272 32.55 33.081" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">Why do you think a FOR loop is not appropriate for solving question 4?</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 190.748 227.224002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0" font-family="g_d0_f3e8dc8361" font-size="1px" fill="rgb(111,113,117)">5</svg:tspan></svg:text><svg:text transform="matrix(9 0 0 9 204.923 227.224002) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 1.022 1.638 2.201 2.59 2.868 3.259 3.827 4.223 5.114 5.393 6.009 6.572 6.959 7.24 7.861 8.472 8.75 9.193 9.814 10.437 11.05 11.336 11.723 12.004 12.625 13.236 13.514 14.127 14.411 15.022 15.3 15.796 16.414 17.025 17.303 17.933 18.336 18.892 19.17 19.561 20.182 20.571 20.849 21.466 22.09 22.664 23.078 23.465 23.746 24.367 24.978 25.256 25.803" font-family="g_d0_f2232db487" font-size="1px" fill="rgb(43,46,52)">What termination condition did you use for question 5?</svg:tspan></svg:text><svg:text transform="matrix(13 0 0 13 204.252 188.964) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.234" x="0 0.654 1.197 1.691 1.946 2.216 2.787 3.133 3.674 4.143 5.019 5.553 5.903 6.175 6.716" font-family="g_d0_f4e28816c7" font-size="1px" fill="rgb(43,46,52)">Key information</svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 190.748 172.087) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.453 1.184 1.735 2.036 2.259 2.822 3.382 3.936 4.32 4.621 5.117 5.442 5.937 6.238 6.688 7.184 7.398 7.621 8.124 8.675 8.976 9.463 9.895 10.449 10.999 11.543 11.852 12.213 12.645 13.201 13.745 14.076 14.401 14.959 15.173 15.396 15.899 16.435 16.986 17.287 17.51 18.073 18.633 19.187 19.573 19.846 20.147 21.104 21.785 22.024 22.478 22.973 23.274 23.497 24.06 24.62 25.174 25.558 25.859 26.355 26.68 27.175 27.476 27.926 28.422 28.636 28.859 29.362 29.913 30.214 30.711 31.264 31.589 32.115 32.476 32.908 33.464 34.017 34.569 34.788 35.119 35.342 35.898 36.407 36.958 37.259 37.482 38.045 38.605 39.159 39.543 39.844 40.34 40.893 41.449" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">FOR loops are called “count-controlled” loops, WHILE loops are called “pre-condition” loops and </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 190.748 160.09) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.561 1.049 1.553 2.076 2.692 3.155 3.517 4.201 4.885 5.402 5.641 6.08 6.381 6.604 7.167 7.727 8.281 8.665 8.966 9.462 9.787 10.282 10.583 11.033 11.529 11.743 11.966 12.469 13.02 13.321 13.818 14.379 14.937 15.335 15.644 16.005 16.437 16.993 17.546 18.098 18.317 18.648 18.871 19.427 19.936 20.487 20.788 21.011 21.574 22.134 22.688 23.079" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">REPEAT-UNTIL loops are called “post-condition” loops.</svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 190.748 145.258) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.631 1.185 1.735 2.279 2.588 2.949 3.381 3.937 4.481 4.812 5.137 5.695 5.909 6.132 6.635 7.186 7.487 7.71 8.273 8.833 9.387 9.771 10.072 10.568 10.893 11.388 11.689 12.239 12.633 13.136 13.687 13.988 14.771 15.326 15.824 16.375 16.676 17.007 17.562 18.057 18.358 18.904 19.454 20.286 20.849 21.347 21.675 21.976 22.524 22.852 23.153 23.478 23.98 24.543 25.04 25.371 25.59 25.921 26.144 26.7 27.248 27.632 27.933 28.149 28.533 28.834 29.333 29.889 30.441 31.226 31.777 32.078 32.631 32.963 33.186 33.742 34.07 34.371 34.691 35.242 35.543 35.874 36.429 36.924 37.225 37.729 38.163 38.669 39.107 39.661 39.992 40.215 40.771 41.327" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">Count-controlled loops are used when the number of repetitions is known prior to the execution </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 190.748 133.261) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.548 0.876 1.177 1.508 2.063 2.558 2.859 3.291 3.852 4.413 4.891 5.164 5.465 5.968 6.293 6.819 7.18 7.612 8.168 8.721 9.273 9.492 9.823 10.046 10.602 11.153 11.454 11.677 12.24 12.8 13.354 13.738 14.039 14.868 15.086 15.638 16.181 16.509 16.81 17.366 17.913 18.241 18.542 19.105 19.6 19.901 20.405 20.839 21.345 21.783 22.337 22.661 23.164 23.715 24.016 24.51 24.838 25.139 25.635 25.849 26.066 26.367 26.642 26.861 27.189 27.49 27.821 28.376 28.871 29.172 29.604 30.16 30.713 31.265 31.484 31.815 32.038 32.594 33.145 33.446 33.662 34.046 34.347 34.903 35.45 35.778 36.079 36.916 37.413 37.745 37.998 38.271 38.572 39.07 39.628 40.026 40.335" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">of the code. Pre-condition loops might not be executed at all (if the condition is not met). Post-</svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 190.748 121.264) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.432 0.988 1.541 2.093 2.312 2.643 2.866 3.422 3.973 4.274 4.497 5.06 5.62 6.174 6.558 6.859 7.642 7.856 8.07 8.287 8.588 9.092 9.526 10.032 10.47 11.024 11.348 11.843 12.144 12.638 12.966 13.267 13.49 13.987 14.485 14.883 15.211 15.512 16.068 16.622 17.056 17.534 17.807 18.108 18.604 19.041 19.539 20.09 20.391 20.61 20.938 21.239 21.57 22.125 22.62 22.921 23.353 23.909 24.462 25.014 25.233 25.564 25.787 26.343 26.894 27.195 27.411 27.795 28.096 28.653 29.149 29.586 30.084 30.412 30.713 31.55 32.047 32.375" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">condition loops will execute at least once, even if the condition is never met.</svg:tspan></svg:text><svg:text transform="matrix(13 0 0 13 90.8661 306.13) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.234" x="0 0.496 1.037 1.598 1.853 2.203 2.473 3.004" font-family="g_d0_f4e28816c7" font-size="1px" fill="rgb(43,46,52)">Top tip!</svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 289.252) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.955 1.51 2.008 2.559 2.86 3.297 3.851 4.402 4.703 5.199 5.524 6.019 6.32 6.818 7.202 7.675 8.178 8.734" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">When you are asked </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 277.255) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.32 0.871 1.172 1.392 1.953 2.451 2.995 3.326 3.545 3.903 4.342 4.643 4.974 5.529 6.024 6.325 6.683 7.133 7.696 8.196" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">to identify the type </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 265.258) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.548 0.876 1.177 1.4 1.963 2.523 3.074 3.375 3.879 4.313 4.811 5.643 6.198 6.412 6.632 6.963 7.187 7.69 8.246" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">of loop exemplified </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 253.261) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.214 0.765 1.066 1.561 1.862 2.417 2.64 3.146 3.58 4.075 4.376 4.924 5.252 5.553 5.985 6.546 7.107 7.585 7.863" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">in a piece of code, </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 241.264) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.325 0.822 1.14 1.638 1.966 2.267 2.587 3.138 3.439 3.77 4.325 4.823 5.651 5.952 6.45 6.839" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">refer to them as </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 229.267) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.432 0.986 1.536 2.08 2.389 2.75 3.182 3.738 4.282 4.613 4.938 5.496 5.71 5.934 6.437 6.982 7.26" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">count-controlled, </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 217.27) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.553 0.878 1.404 1.765 2.197 2.753 3.306 3.858 4.077 4.408 4.631 5.187 5.738 6.039 6.595 6.923 7.224 7.785 8.343 8.741 9.05" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">pre-condition or post-</svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 205.273) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.432 0.988 1.541 2.093 2.312 2.643 2.866 3.422 3.973 4.274 4.497 5.06 5.62 6.174 6.565 6.838 7.139 7.59 8.146 8.479" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">condition loops. For </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 193.276) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.504 0.95 1.446 2.278 2.833 3.056 3.534 3.807 4.108 4.507 4.998 5.446 5.66 6.211 6.762 7.063 7.282 7.61 7.911 8.127 8.516" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">example, saying it is </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 181.279) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.495 0.796 1.249 1.98 2.531 2.832 3.055 3.618 4.178 4.729 5.03 5.244 5.792 6.19 6.514 7.011 7.511 8.062 8.363 8.911 9.244" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">a FOR loop instead of </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 169.282) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.495 0.796 1.284 1.716 2.27 2.82 3.364 3.673 4.034 4.466 5.022 5.566 5.897 6.222 6.78 6.994 7.218 7.721 8.257 8.813" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">a “count-controlled” </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 157.285) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.223 0.786 1.346 1.897 2.198 2.414 2.798 3.099 3.655 4.202 4.53 4.831 5.329 5.885 6.439 6.992 7.544 8.086 8.359 8.66 9.158 9.547" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">loop is not enough, as </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 145.288) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.219 0.547 0.848 1.064 1.448 1.749 2.305 2.852 3.18 3.481 3.919 4.142 4.639 5.135 5.463 5.764 6.095 6.642 7.136 7.464 7.765 8.202 8.756 9.312" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">it is not clear that you </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 133.291) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.499 1.055 1.607 2.38 2.681 3.464 4.011 4.505 4.833 5.134 5.492 5.943 6.506 7.001 7.302 7.85 8.183" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">know what type of </svg:tspan></svg:text><svg:text transform="matrix(8.82 0 0 9 77.3622 121.294) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.25" x="0 0.223 0.786 1.346 1.897 2.198 2.693 2.994 3.447 4.178 4.729 5.03 5.253 5.816 6.376 6.927 7.228 7.444 7.835" font-family="g_d0_f1b68dd023" font-size="1px" fill="rgb(43,46,52)">loop a FOR loop is.</svg:tspan></svg:text><svg:text transform="matrix(6 0 0 6 33.5039 3.114) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.481" x="0 0.556 1.112 1.668 2.224 2.78 3.336 3.892 4.448 5.004 5.56 6.282 6.838 7.671 8.227 8.783 9.061 9.617 9.95 10.506 11.173 11.673 11.895 12.451 13.007 13.507 14.063 14.619 14.897 15.564 16.12 16.842 17.064 17.62 17.842 18.398 19.231 19.787 20.343 21.01 21.566 21.844 22.066 22.622 23.178 23.734 24.012 24.29 24.568 25.124 25.68 89.963 90.519 91.075 91.353 91.909 92.465 92.743 93.299 93.855 94.411 94.967 95.245 95.523 95.801 96.357 96.913 97.191 97.747" font-family="g_d0_f5fab9e449" font-size="1px" fill="none" stroke-width="0.06667px" stroke="rgb(255,255,255)">009007_06_Computer_Science_IB_Diploma_B2.indd   32506/02/2025   16:20</svg:tspan></svg:text><svg:text transform="matrix(6 0 0 6 33.5039 3.114) scale(1, -1)" xml:space="preserve"><svg:tspan y="-0.481" x="0 0.556 1.112 1.668 2.224 2.78 3.336 3.892 4.448 5.004 5.56 6.282 6.838 7.671 8.227 8.783 9.061 9.617 9.95 10.506 11.173 11.673 11.895 12.451 13.007 13.507 14.063 14.619 14.897 15.564 16.12 16.842 17.064 17.62 17.842 18.398 19.231 19.787 20.343 21.01 21.566 21.844 22.066 22.622 23.178 23.734 24.012 24.29 24.568 25.124 25.68 89.963 90.519 91.075 91.353 91.909 92.465 92.743 93.299 93.855 94.411 94.967 95.245 95.523 95.801 96.357 96.913 97.191 97.747" font-family="g_d0_f5fab9e449" font-size="1px" fill="rgb(0,0,0)">009007_06_Computer_Science_IB_Diploma_B2.indd   32506/02/2025   16:20</svg:tspan></svg:text></svg:g></svg:svg>